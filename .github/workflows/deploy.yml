name: Staging Deploy

on:
  push:
    branches:
      - stage

jobs:
  build-static-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm ci
      working-directory: frontend/landing
    - run: npm run build
      working-directory: frontend/landing
    - run: rsync -a static/ public/
      working-directory: frontend
    - uses: actions/upload-artifact@v2
      with:
        name: public
        path: frontend/public

  build-dashboard-stage:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm ci
      working-directory: frontend/dashboard
    - run: npm run build-stage
      working-directory: frontend/dashboard
    - uses: actions/upload-artifact@v2
      with:
        name: dashboard-stage
        path: frontend/public/dashboard

  build-editor-stage:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm ci
      working-directory: frontend/editor

    - run: npm run build-stage
      working-directory: frontend/editor
    - uses: actions/upload-artifact@v2
      with:
        name: editor-stage
        path: frontend/public/editor

    - run: npm run build-stage-demo
      working-directory: frontend/editor
    - uses: actions/upload-artifact@v2
      with:
        name: demo-stage
        path: frontend/public/demo

  synth-workflows:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm ci
      working-directory: workflows
    - run: npm run synth
      working-directory: workflows
    - uses: actions/upload-artifact@v2
      with:
        name: workflows
        path: workflows/synth

  build-utils:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm i -g dry-dry
    - run: dry i
      working-directory: functions/utils
    - run: dry run build --dry-keep-package-json
      working-directory: functions/utils
    - uses: actions/upload-artifact@v2
      with:
        name: utils
        path: |
          functions/utils/dist
          functions/utils/package.json
          functions/utils/package-lock.json

  build-functions:
    needs: [build-utils]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        functionName:
          - adjust
          - align
          - align_worker
          - charge_credit
          - create_checkout
          - delete_transcript_files
          - fetch
          - get_metadata
          - payment
          - signup
          - transcode_envelope
          - transcode_transcription
          - transcode_playback
          - transcribe
          - transcription_watcher
          - upload
          - upload_watcher

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - uses: actions/download-artifact@v2
      with:
        name: utils
        path: functions/utils
    - run: npm i -g dry-dry
    - run: dry i
      working-directory: functions/${{ matrix.functionName }}
    - run: dry run build --dry-keep-package-json
      working-directory: functions/${{ matrix.functionName }}
    - run: cp -r ${{ matrix.functionName }} master/code
      working-directory: functions
    - run: cp -r utils master/utils
      working-directory: functions
    - run: npm ci
      working-directory: functions/master
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.functionName }}
        path: |
          functions/master/code/dist
          functions/master/code/package.json
          functions/master/code/package-lock.json
          functions/master/utils/dist
          functions/master/utils/package.json
          functions/master/utils/package-lock.json
          functions/master/index.js
          functions/master/package.json

  deployment-gate-stage:
    needs: [build-static-frontend, build-dashboard-stage, build-editor-stage, build-functions, synth-workflows]
    runs-on: ubuntu-latest

    steps:
    - run: echo "Everything built successfully"

  deploy-frontend-stage:
    needs: [deployment-gate-stage]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout --orphan stage-deployed-frontend
        git reset --hard
    - uses: actions/download-artifact@v2
      with:
        name: public
        path: .
    - uses: actions/download-artifact@v2
      with:
        name: editor-stage
        path: editor
    - uses: actions/download-artifact@v2
      with:
        name: demo-stage
        path: demo
    - uses: actions/download-artifact@v2
      with:
        name: dashboard-stage
        path: dashboard
    - run: |
        git add .
        git commit -m "Update hosted version"
    - uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: true
        branch: stage-deployed-frontend

  deploy-backend-stage:
    needs: [deployment-gate-stage]
    runs-on: ubuntu-latest
    environment: stage

    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        path: terraform/functions
    - uses: hashicorp/setup-terraform@v1
    - run: terraform init && terraform apply -auto-approve
      working-directory: terraform/stage
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

  build-dashboard-prod:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm ci
      working-directory: frontend/dashboard
    - run: npm run build-prod
      working-directory: frontend/dashboard
    - uses: actions/upload-artifact@v2
      with:
        name: dashboard-prod
        path: frontend/public/dashboard

  build-editor-prod:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - run: npm ci
      working-directory: frontend/editor

    - run: npm run build-prod
      working-directory: frontend/editor
    - uses: actions/upload-artifact@v2
      with:
        name: editor-prod
        path: frontend/public/editor

    - run: npm run build-prod-demo
      working-directory: frontend/editor
    - uses: actions/upload-artifact@v2
      with:
        name: demo-prod
        path: frontend/public/demo

  deploy-backend-prod:
    needs: [build-dashboard-prod, build-editor-prod, deploy-frontend-stage, deploy-backend-stage]
    runs-on: ubuntu-latest
    environment: prod

    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        path: terraform/functions
    - uses: hashicorp/setup-terraform@v1
    - run: terraform init && terraform apply -auto-approve
      working-directory: terraform/prod
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

  deploy-frontend-prod:
    needs: [deploy-backend-prod]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout --orphan prod-deployed-frontend
        git reset --hard
    - uses: actions/download-artifact@v2
      with:
        name: public
        path: .
    - uses: actions/download-artifact@v2
      with:
        name: editor-prod
        path: editor
    - uses: actions/download-artifact@v2
      with:
        name: demo-prod
        path: demo
    - uses: actions/download-artifact@v2
      with:
        name: dashboard-prod
        path: dashboard
    - run: |
        git add .
        git commit -m "Update hosted version"
    - uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: true
        branch: prod-deployed-frontend
